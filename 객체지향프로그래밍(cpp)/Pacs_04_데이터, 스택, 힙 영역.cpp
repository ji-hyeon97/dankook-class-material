/* 우리들이 프로그램을 실행하면, 운영체제는 우리들이 실행한 프로그램을 위해 메모리 공간을 할당해 줍니다.
그냥 할당해 주는 것이 아니라 용도별로 메모리 공간을 할당해 운영체제가 메모리 영역을 구분해 메모리 공간의
효율적 사용을 하게 만들어 줍니다.

데이터 영역 : 전역변수, Static변수를 위한 메모리 공간
- 전역변수 : 프로그램이 시작하자마자 메모리 공간에 올라가서 종료 될때까지 남아 있는다.
- Static 변수 : 프로그램 시작과 동시에 메모리 공간에 올라가서 종료될때까지 남아 있긴 한다.

힙영역 : 런타임에 크기가 결정될수 있는 요소들을 올리기 위한 공간
Stack : 컴파일 타임에 크기가 결정될 수 있는 요소들을 메모리 공간에 올리기 위한 영역

#include<iostream>

using namespace std;

void function(int );

int main() {
	int size;
	cin >> size;
	function(size);
	return 0;
	//메인함수에서 요구되어 지는 메모리 공간의 크기는 컴파일 타임에 크기가 결정 가능하다
	//이런 것을 올리기 위한 영역이 Stack
}

void function(int i) {
	static int i = 10;
	int array[i];
}
다음의 코드는 에러를 일으키는데 function이라는 함수는 컴파일 타임에 요구되어 지는 메모리 크기를 계산하기는 불가능
합니다. array라는 배열을 선언하기에 있어서 그 크기를 전달되는 인자값에 의해서 결정되어 지는데,
이는 i값은 고정이 아니라, 프로그램을 실행하는 사람에 의해서 값 변동이 심할 것입니다.
그러면 컴파일 되는 동안에 function이라는 함수내에서 요구되어지는 메모리 크기를 컴파일 타임에 결정할
수 없게 되고, 이 크기는 입력되는 size값이 결정되어야만 결정이 됩니다.
일반적으로 int array[i]; 라고 선언을 하면, 스택에 올리는 의미가 됩니다. 그래서 우리는 힙이라는 메모리
공간에 이런 배열을 선언하기 위해 malloc, free라는 함수를 사용합ㄴ디ㅏ.

malloc: 힙에다가 메모리 공간을 할당하기 위한 함수, free는 malloc으로 할당된 메모리 공간을 해제하기 위한 함수이다.

*/